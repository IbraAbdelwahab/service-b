name: CI/CD Pipeline with Staging and Production

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Specify the environment to deploy to (staging or production)'
        required: true
        default: staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install -DskipTests

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run tests
        run: mvn test

  docker_build_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/service1:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/service1:${{ github.sha }}

  deploy_infrastructure:
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'production'
    needs: docker_build_push
    steps:
      - name: Deploy ARM template
        run: |
          az group create --name ${{ secrets.RESOURCE_GROUP }} --location "East US"
          az deployment group create \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --template-file path/to/your/arm-template.json \
            --parameters @path/to/parameters.json

  deploy_to_kubernetes:
    runs-on: ubuntu-latest
    needs: [docker_build_push, deploy_infrastructure]
    steps:
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f path/to/k8s-deployment-${{ github.event.inputs.environment }}.yml
